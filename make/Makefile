# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.
# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = /c/googletest-master/googletest
GMOCK_DIR = /c/googletest-master/googlemock

# Where to find user code.
SRC_DIR = ../src
TESTS_DIR = ../tests

CXX = g++

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread -O3 -fmessage-length=0

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = EnterTheMatrix_Test

# Build without tests.
NOTESTS = EnterTheMatrix

# All Google Test headers.  Usually you shouldn't change this
# definition.
# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# All Google Mock headers. Note that all Google Test headers are
# included here too, as they are #included by Google Mock headers.
# Usually you shouldn't change this definition.	
GMOCK_HEADERS = $(GMOCK_DIR)/include/gmock/*.h \
                $(GMOCK_DIR)/include/gmock/internal/*.h \
				$(GTEST_HEADERS)				
                
GTEST_LIB = $(GTEST_DIR)/make
GMOCK_LIB = $(GMOCK_DIR)/make

# House-keeping build targets.

all : $(TESTS)

# Run with this option "make coverage" to produce the files needed for
# coverage report.
coverage : CXXFLAGS += -fprofile-arcs -ftest-coverage -lgcov --coverage
coverage : $(TESTS)

notest : $(NOTESTS)

clean : 
	rm -f $(TESTS) $(NOTESTS) *.o *.gcov *.gcda *.gcno *.xml

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.
MATRIX_SRCS_ = $(SRC_DIR)/*.cpp $(SRC_DIR)/*.hpp
MATRIX_TEST_SRCS_ = $(SRC_DIR)/*.hpp $(TESTS_DIR)/*.cpp $(GMOCK_HEADERS)

Matrix.o : $(MATRIX_SRCS_)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/Matrix.cpp
	
Matrix_Test.o : $(MATRIX_TEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR)/include -I$(GMOCK_DIR)/include $(CXXFLAGS) -c $(TESTS_DIR)/Matrix_Test.cpp

EnterTheMatrix : Matrix.o
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

EnterTheMatrix_Test : Matrix.o Matrix_Test.o $(GTEST_LIB)/libgtest.a $(GMOCK_LIB)/libgmock.a $(GMOCK_LIB)/gmock_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@
	

